>>>It项目管理知识点总结
    >>>1概述

        >>软件特征
            >>最根本的：软件是一种逻辑元素而不是物理元素
            >>软件是开发出来的，而不是用传统的方法制造出来的
            >>软件不会被用坏
        >>什么是项目
            >>>没有例行的任务
            >>>需要计划
            >>>特定的目标需要满足或者特定的产品需要生成
            >>>项目有一个预定义的时间范围
            >>>工作不仅仅是为自己，也是为他人
            >>>工作中有些特性
            >>>工作分为若干阶段
            >>>项目完成需要资源
            >>>项目是大型的或者复杂的
            
        >>什么是项目管理，项目管理的特征，涉及的知识域
            >>>项目管理是在项目活动中应用的知识，技能，工具和技术来满足项目需求的过程，它通过初始化，计划，执行，控制和结束等活动完成
            >>>项目管理的特征：the challenge satisfying everyone
            >>>涉及的知识域：1.Generally Accepted Project Management Knowledge and Pratice 
                            2.General Management Knowledge and pratice
                            3.Application Area knowledge and Practice
        >>项目阶段，项目生命周期 
            >>>每一个项目阶段的标记是一个或几个可交付的物件（deliverable).Deliverable是一个具体的可验证的工作产品，如可行性研究，
            详细设计或者一个工作原型。
            >>>项目阶段的结束是由关键交付物或这项目性能作标记的，以确定项目是否能够继续进行下一个阶段胡哦这检测和修正错误。
            阶段结束的检查经常被称为phase exits,stage gates,kill points.

            >>>项目生命周期：项目生命周期定义了一个项目的开始与结束。
                            项目生命周期定义的阶段顺序通常博爱阔某些技术转移或“握手”(hand off)，如从需求到设计，从构造到运行，但是在风险允许下，
                            也可以下一阶段提前进行，这种重叠 的阶段被称为快速跟踪(fast tracking).
                            项目周期通常定义：
                            各个阶段需要完成的技术工作
                            每个阶段需要涉及的人。
        >>软件项目及其特点，软件项目的阶段
            >>软件项目的特点：1.不可见 2.复杂性(以每一单位货币来看)。3.灵活性：软件去适应人或组织而不是相反。
            >>软件项目的阶段：
                >>需求分析
                >>描述
                >>设计
                >>编码
                >>校验
                >>安装
                >>维护
                >>支持
        >>软件项目的目标与人员
            >>目标：项目的目标必须 清晰定义，以确定成功的关键。每一个项目必须有一个项目权威,该权威经常被称为项目指导委员会，项目的目标必须由指导委员会确定。
                    有效的目标必须易于测量，从而更能够衡量是否成功，如减少客户抱怨50%将比“改善客户关系”更容易测量
            >>人员：
                项目影响者：项目小组内部/项目小组外部，但在同一组织内/项目小组和组织外部：如客户。

                不同的项目影响者有不同的目标，因而项目领导者需要能够协调这些目标。
                主要的项目涉及者如下：
                    >>财务部门
                    >>人力部门：提供绝大多数雇员细节
                    >>部门经理：提供兼职人员的工作时间细节
                    >>职员：他们关心工资是否正确
                    >>办公室管理：办公室可能需要调整
                    >>软件和硬件供应商
                    可能遗忘的人员是：当地政府相关人员，因为如果得到他们的帮助有助于新系统的开发，甚至有可能直接招聘他
        >>常见错误
            >>产品相关的错误：
                >>需求镀金：项目具有比实际需求多得多的性能
                >>功能蔓延：项目平均会有25%的需求变更
                >>开发人员的镀金：开发人员着迷于新技术
                >>又推又拉的交易：经理在批准项目进度顺延时又加入了新的功能
                >>研究导向的开发
         
            >>过程
                >>缺乏计划
                >>过于乐观的计划
                >>在压力下放弃计划
                >>缺乏足够的风险管理
                >>承包人导致的失败
                >>在模糊的项目前期（fuzzy frond end）浪费时间
                >>前期活动不合要求
                >>设计低劣
                >>缺少质量保证措施
                >>缺少管理控制
                >>太早或过于频繁的集成
                >>项目估算时遗漏必要的任务
                >>追赶计划
                >>鲁莽编码
            >>技术相关错误：
                >>银弹综合征：过于相信以前没有采用过的技术的宣传
                >>过高估计了新技术或方法带来的节省量
                >>项目中间切换工具
                >>缺少自动的源代码控制手段
            >>人员相关的错误：
                >>挫伤积极性
                >>人员素质低
                >>对有问题员工失控
                >>英雄主义
                >>项目后期加入人员："火上浇油"
                >>办公环境差
                >>开发人员与客户之间发生摩擦
                >>不现实的预期
                >>缺乏有效的高层对项目的支持
                >>缺乏各种角色的齐心协力
                >>缺乏用户介入
                >>政治高于物质
                >>充满想象：“项目组没人真正相信他们能够按给定的计划进度完成项目，但他们认为如果每个人能够努力工作，
                并且不出现问题，他们可能会很幸运地按时完成任务。”
    2.项目计划总览：
        >>项目计划的作用
            >>
        >>项目计划模型
        >>PBS(Product Breakdown Structure,PBS),PFD(Product Flow Diagram)及活动图
                PBS的描述方法
                产品的名字/标识
                产品的功能
                产品的派生物（从中派生的其它产品）
                产品的分解结构
                产品的形式
                相关标准
                适用的质量标准
        >>PFD
            >>某些产品需要其它产品产生后才能进行，
            例如程序设计必须在编码前，需求分析后进行。
            该关系可以用产品流图(Product Flow Diagram, PFD)来描述
    3.项目评估：
        >>项目评估原则，内容，与可行性分析的差别
        >>评估原则
            投入与产出相匹配的原则
            面向需求的原则
            资金时间价值原则
            公正性原则
            科学性原则
            客观性原则
        >>与可行性分析的差别
            >>承担两项工作的主体不同：一般需要由不同的机构分担
            >>视角和着重点不同：可行性研究注重从企业角度评价项目，项目评估注重于项目的宏观效益
            >>为项目决策服务的任务和目的不同
                可行性研究为复杂的技术经济性论证工作，需规划多种方案
                项目评估一般借助于可行性研究的成果进行系统的审查和核实
            >>可行性研究与项目评估在项目决策过程中的时序和地位也有差别：可行性研究是项目评估的前提，项目评估为决策提供直接的、最终的依据

        >>评估内容
            >>策略评估
            >>操作性评估
            >>计划评估
            >>技术评估
            >>风险评估
            >>社会性评估
            >>经济评估(重点)
                开发所需要的成本和系统运行所需要的成本与得到的效益的比较
                识别出项目进行中所需要的所有成本和效益并对其进行聚集
                    这些估计必须反映的是新系统本身带来的成本和效益，例如订单处理系统本身它的效益并不是全部的销售额，
                    而是对销售额的增长有贡献
                将成本和效益用通用单元来表达

                是否任何一个项目利益大于成本就可以去实施呢？
                    未必，因为  
                        >>可能有更好的项目
                        >>可能你的资金不够
                所以它只是一个待选项目


    4.需求管理：
        >>目标管理的概念和特点
            >>目标管理是参与管理的一种形式：上下级目标形成“目标——手段”链
            >>强调“自我控制”：人们应“控制”的是行为的动机而不是行为本身
            >>促进下放权力：有助于协调集权与分权的矛盾
            >>注重成果第一的方针：目标考核体系
        >>范围管理
            >>项目范围是指我了成功达到项目的目标，目标所规定要做的工作
            >>在项目环境中，"范围"
                >>产品范围，即一个产品或一项服务应该包含哪些特征和功能
                >>产品规格，即产品所所包含的特征和功能具体是怎么样的。
                >>项目范围，即为了交付具有所指特征和功能的产品所必须要做的工作。
        >>需求管理： 
            >>需求工程
            |             \   
            |               |
         需 求 开 发        需求管理
        /  |   |        \
问题获取 分析 编写规格说明 验证 
            
            
        >>如何获取需求
            >>需求的来源
                >>访问并与有潜力的用户探讨
                >>把对目前的或竞争产品的描述写成文档
                >>系统需求规格说明
                >>对当前系统的问题报告和增强要求
                >>市场调查和用户问卷调查
                >>观察正在工作的用户
                >>用户任务内容分析

        >>需求规格说明
            >>ppt5.P47
    
    5.各种模型得到特点和优缺点比较
        >>ppt4
            >>编码修正模型
            >>瀑布模型
            >>瀑布模型变种:V模型
            >>瀑布模型变种：生鱼片模型
            >>螺旋模型
            >>并行开发模型
            >>原型法

    6.软件工作量估算：
        >>工作量估算的困难性的原因
            >>估算困难是由于软件的本质带来的，特别是其复杂性和不可见性。
            >>软件开发是人力密集型的工作，因而不能以机械的观点来看待
            >>传统的工程项目经常会以相近的项目做参考。不同的只是客户和地点，而绝大部分软件项目是独一无二的
            >>新技术的不断出现和应用。
            >>缺少项目经验数据，许多组织无法提供原有项目数据，而即使提供了这些项目的数据，也未必非常有用。

            >>估计的主观性：人们容易低估小项目的工作量，而过分夸大大项目的工作量
            >>估计的政治因素：不同的人有不同的目标
        >>工作量估算精确性和准确性，渐进性
        >>何时需要度量
            >>策略计划：选择合适的项目
            >>可行性分析
            >>系统描述：实现各个需求的工作链提供需要被衡量
            >>评估供应商的建议
            >>项目计划:
                >>项目在进行过程中，估算越来越准确
                >>在项目开始阶段考虑的是用户的需求，不考虑算法实现，但是为了估算，有时需要考虑一些实现的方法
        >>过高估计和过低估计的问题
        过高估计的问题:
            >>Parkinson法则：给的时间越多，工作花费的时间也越多
            >>Brook法则：当人数增加后，项目所需的工作量将不成比例的增加，当团队规模变大后，由于管理，协调和通信的增加，将造成
            工作量的增加，因而“投入更多的人将使延期的工作更加延期”
        过低估计的问题:
            >>质量降低
            >>Weinberg的可靠性零法则:"如果系统不必可靠，那么它可以满足任何目标"。
        >>估算的基础和技术
            >>历史数据的需要
                >>在参考历史数据时，需要考虑不同的环境，如编程语言，软件工具，标注和人员经验。
            >>工作度量：
                >>直接计算真正的成本或时间是不可能的，编写程序的时间，不同的人将有显著的区别
                >>通常将工作量表达为源代码的数量（source Line of code，SLOC），或者千行代码量（KLOC)
            >>复杂性：
                >>相同的KLOC的两个程序花费的时间将会不同，因而不能简单地用用KLOC或SLOC。而要根据复杂性进行修正，
                但是复杂度的度量通常是主观而定的
        >>Albrecht功能点模型
            >>该方法是由Allan Albrecht在IBM工作时发明的自顶向下方法。
            >>功能点法
            外部输入：应用数据
            外部输出：提供给用户的面向应用的信息
            内部逻辑文件：逻辑主文件
            外部接口文件：与其它系统交换信息
            外部查询：在线的输入以获得立即的结果

        >>COCOMO模型(参数化模型)
            >>Constructive Cost Model
            >>基本的公式为:
                Effort = c * size^k
                其中effort采用“人月(152个工作小时)”pm来度量，size采用kdsi即千行交付源代码指令
                (thousands of delivered source code instructions)

        >>大致进度估算的方法
            >>大致的(Bullpark)进度估算
                >>软件估算方程和系数一定程度上比较难掌握
                >>软件工作量估算软件比较昂贵
                >>大致的估算简单易行
            >>三个进度表
                >>可能的最短进度
                >>有效的进度
                >>普通进度
        >>过于乐观的进度估计的后果
            >>计划的质量：错误的假设必将导致无效的项目规划
            >>抛弃计划:当面临进度压力时，大多数开发组织会抛弃原有规划，而走入盲目开的歧途
            >>如试图在关键阶段节省时间，必将在后续阶段加倍补偿。
            >>分散了管理者的注意力：管理者将分散精力在不断调整计划上
            >>客户关系:项目一拖再拖，客户将失去耐心。
            >>仓促收尾:
                >>要排错只能将系统拆分后再进行，一个小的变动要花很长时间。
                >>开发人员清楚地知道系统中存在一些应作修改却未做的地方。
                >>测试人员发现错误的同时，产生了大量新的错误。
                >>由于软件变化频繁，难以保证用户文档的同步更新。
                >>项目估算多次调整， 软件交付日期一拖再拖。


    7.软件项目计划
        >>WBS
            >>自顶向下的的分解---WBS
            
        >>网络计划模型
            >>将项目活动和其关系可以表示成网络
            >>该项技术起源于二十世纪50年代
            >>CPM(关键路径法,Critical Path Method)
            >>PERT(计划评审技术，Program Evaluation Review Technique)
            >>优先网络(Precedence Networks)是上述两种模型的变种
            >>三种模型是类似的，因而经常被有些人统称为CPM
            >>dummy Activity
                >>A dummy activity is a simulated activity of sorts,
                 one that is of a zero duration and is created for the sole purpose of 
                 demonstrating a specific 
                relationship and path of action on the arrow diagramming method.
        >>画图，关键路径计算，浮动时间计算
    
    8.资源管理
        >>资源分配的目的，资源种类
            >>目的：
                活动调度
                资源调度
                成本调度
            >>种类：
                人力：项目团队成员
                设备：别忘了基本的办公条件
                物料：软盘等
                空间：如要容纳更多的人，要看房间是否能够容纳
                服务：
                时间：
                钱：
        >>资源负荷图的画法及资源调度

    9.项目监控
        >>软件项目监控框架：过程，责任，进度评估，检查点设置和监测频率
            >>责任：
                项目指导委员会负责整个项目进度
                报告项目情况的组织结构
                项目情况报告的内容
            
            >>进度评估：
                基础：定期信息收集或者发生的特定事件
                这些信息必须是客观的和可度量的
                但是并非每一次都能够得到符合要求的信息，因而通常需要项目成员的主观判断
            >>检查点设置：
                定期的（如一星期一次，一月一次）
                与特定的事件绑定的，如生成一份报告或者交付部分产品
            >>监测频率：
                >>监测的频率依赖于项目的大小和风险情况
                    团队领导，可能需要每天都了解一下进度
                    项目经理需要每星期或每月了解情况
                >>管理层次越高，频率越低，信息越抽象
                >>许多公司利用星期一早晨的短会来激励员工实现短期目标

        >>成本监控:盈余量的概念和计算，画图
            >>盈余量：建立在对每个任务或工作包的消耗预测的机基础上
            >>对每一项内容的原始预算成本被称为预算基线或计划工作的预算成本
            >>未开始的任务被赋予值0，当它被完成后，将被赋值。在项目中的一点上，全部的值将被称为盈余量或完成工作的
            预算成本
            >>


    10.风险管理
        >>什么是风险工程
            >>风险管理的基本概念：
                >>目标：明确定义的目标加上可度量的成功标准界定了可接受的风险范围
                >>不确定性：未知的因素
                >>损失：如果没有潜在的损失，就没有风险
                >>时间：我们需要时间来预防和防止问题的发生。
                >>选择：没有选择，就没有风险管理
                >>制定明智的决策：意识、洞悉和理解风险是我们作出明智决策的基础
                >>应对风险:风险行动计划
                >>防患于未然：风险管理是减少有代价的重复劳动的主动决策
        >>如何识别风险和降低风险
            >>风险识别(identification)
                将所有能够影响项目成功执行的风险列出
            >>风险估计(estimation)
                对每一个风险的可能性和影响进行评价
            >>风险评估(evaluation)
                将风险进行排序并确定风险规避策略
            >>风险计划(palnning)
                构造一个意外计划，如果合适，可以加入到项目任务的结构中，对于小项目，风险管理由
                项目经理负责，对于大项目，风险管理可能由全职风险经理负责。
            >>风险控制(Control)
                处理项目中的问题并尽量降低问题的影响.
            >>风险监测(Monitoring)
            >>风险定向(Directing)和风险职员分配(Staffing)
        

        >>风险暴露量和风险降低杠杆的概念
            >>风险暴露量
                Risk exposure=risk likelihood * risk impact
                Risk impact 一般以金额为单位，而likelihood以概率为单位
                风险暴露量 RRL = (REbefore-REafter)/risk reduction Cost

        >>PERT图中的概念(期待时间，活动标准偏差的计算)
            >>使用PERT评价不确定的方法
            >>PERT与CPM同时出现，具有类似性
            >>每个活动的持续时间的估计包括：
                最可能时间(Most Likely Time):m
                乐观时间(Optimistic Time):a
                悲观时间(Pessimistic Time):b 
            >>期待时间：
                Tc = (a + 4m + b)/6
            >>活动标准偏差(Actrivity Standard Deviation)
                >>计算方法：S=(b-a)/6
            >>达到目标的可能性
                >>计算步骤:
                    >>计算每个项目事件的标准偏差
                    >>计算具有目标期限的事件的z值
                    >>将z值转换为概率
                >>项目事件得到标准偏差的计算方法与计算项目期待时间计算时采用的方法是类似的
                >>两个标准偏差的和是两者的平方和再求平方根
                >>计算Z值：
                    Z=(T-te)/s
                    T:目标日期 te:期待时间 s:标准偏差
    11.质量管理
        >>质量要素与质量准则
            >>质量要素需要转换成开发者可以意识到的内部准则

        >>软件质量包含哪些方面
        >>软件质量可以包括:
                >>运行质量：
                    正确性
                    可靠性
                    集成性
                    可用性
                >>修改质量:
                    可维护性
                    可测试性
                    灵活性
                >>转换质量
                    >>可移植性
                    >>可重用性
                    >>互操作性
        ppt12 P7
        >>如何度量质量
            >>对于每一准则，，必须定义一个和多个度量标准来完成评估工作
            >>任何相对度量需要将度量的单元与环境中发生的最大可能性相联系。
            >>在某些时候，我们可以直接度量质量，在另外一些时候，我们度量的是质量的标新
            >>软件的使用者关注的是质量因素，而开发者需要关注的是质量准则
            >>为了度量，需要对每一质量规定：
                >>度量的单元
                >>测试的范围
                >>最差的可接受值
                >>计划达到的值
                >>当前可达到的最佳的值
                >>目前旳值
        >>系统可用性和MTBF的计算
        PPT12 P19
        >>可维护性和可扩展性的计算
            >>k可维护性：该特性与灵活性紧密关联，灵活性是系统修改的容易程度。
            可维护性可以用灵活性加上可诊断性来度量。诊断性可以用诊断一个错误的平均时间来度量
            >>可扩展性：将新的特征加到现有系统中的效率占从头开始开发一个新系统的效率的比。
            

    12.人员管理
        >>能够运用基本理论解释一些现象
